---
import Header from '../components/general/Header.astro';
import { ViewTransitions } from "astro:transitions";
import Footer from '../components/general/Footer.astro';
interface Props {
	title: string;
}
const { title } = Astro.props;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<meta name="view-transition" content="same-origin"/>
		<ViewTransitions />
	</head>
	<body class="bg-sunny min-h-screenflex-1">
		<Header />
		<main class="max-w-screen m-auto py-8">
			<slot />
		</main>
		<Footer />
	</body>
</html>
<style is:global>
	@font-face {
		font-family: 'Poppins';
		src: url('../fonts/Poppins-Regular.ttf') format('ttf');
		font-weight: normal;
		font-style: normal;
		font-display: swap;
	}
	*{
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	html {
		font-family: 'Poppins', sans-serif;
		background-size: 224px;
		overflow-x: hidden;
	}
	.fade-in {
		opacity: 0;
		transition: opacity 0.5s ease-in-out;
	}

	.fade-in.active {
		opacity: 1;
	}
	.image-container {
		perspective: 1000px; /* Define la perspectiva */
	}

	.image-container:hover .image {
		transform: rotateY(10deg); /* Gira la imagen en el eje Y */
		transition: transform 0.5s ease; /* Agrega una transici√≥n suave */
	}
</style>
<script>
	document.addEventListener('DOMContentLoaded', () => {
		const sections = document.querySelectorAll('section');
	
		const fadeIn = () => {
		sections.forEach(section => {
			const sectionTop = section.getBoundingClientRect().top;
			const windowHeight = window.innerHeight;
	
			if (sectionTop < windowHeight) {
			section.classList.add('active');
			} else {
			section.classList.remove('active');
			}
		});
		};
	
		fadeIn();
	
		document.addEventListener('scroll', fadeIn);
	});

</script>